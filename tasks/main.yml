---
- name: Include OS-specific variables.
  ansible.builtin.include_vars: "{{ ansible_facts['os_family'] }}.yml"

- name: Ensure that essential packages are installed.
  ansible.builtin.package:
    name:
      - git
      - neovim
    state: present
  become: true

- name: Ensure required directories exists.
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ nvim_dir }}"
    - "{{ config_dir }}"
    - "{{ plugins_dir }}"

- name: Install init.lua.
  ansible.builtin.template:
    src: templates/init.lua.j2
    dest: "{{ nvim_dir }}/init.lua"
    mode: "0644"
    force: true

- name: Install config templates
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
    force: false
  loop:
    - src: "templates/lua/config/mappings.lua.j2"
      dest: "{{ config_dir }}/mappings.lua"
    - src: "templates/lua/config/settings.lua.j2"
      dest: "{{ config_dir }}/settings.lua"

- name: Install plugins with packer.
  when: plugin_manager == "packer"
  ansible.builtin.import_tasks: "packer.yml"

- name: Fail
  ansible.builtin.fail:

- name: Install LSP
  ansible.builtin.import_tasks: "lsp.yml"
  when: install_lsp

- name: Install TreeSitter
  ansible.builtin.import_tasks: "treesitter.yml"
  when: install_treesitter

- name: Install config files
  ansible.builtin.import_tasks: "config.yml"
