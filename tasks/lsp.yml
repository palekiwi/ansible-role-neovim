---
- name: Ensure required packages are installed.
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  become: true
  loop: "{{ lsp_packages }}"

- name: Require lsp-config in packer
  ansible.builtin.blockinfile:
    path: "{{ plugins_dir }}/packer.lua"
    marker: "-- {mark} ANSIBLE MANAGED BLOCK: LSP"
    insertbefore: "--> LSP plugins end"
    block: |2
        use 'neovim/nvim-lspconfig'           -- Collection of configurations for built-in LSP client
        use 'hrsh7th/nvim-cmp'                -- Autocompletion plugin
        use 'hrsh7th/cmp-nvim-lsp'            -- LSP source for nvim-cmp
        use 'saadparwaiz1/cmp_luasnip'        -- Snippets source for nvim-cmp
        use 'L3MON4D3/LuaSnip'                -- Snippets plugin
        use 'onsails/lspkind.nvim'            -- Pictograms for lsp
  notify: PackerSync

- name: Copy lsp plugin files
  ansible.builtin.copy:
    src: "files/lua/plugins/{{ item }}"
    dest: "{{ plugins_dir }}/{{ item }}"
    mode: "0644"
    force: false
  loop:
    - lsp.lua
    - cmp.lua

- name: Install language servers from npm.
  community.general.npm:
    name: "{{ item.package }}"
    global: true
    state: present
  loop: "{{ lsp_servers }}"
  when: "lsp_servers is defined and (lsp_servers | length > 0) and item.method == 'npm'"
  become: true

- name: Install language servers from system repositories.
  ansible.builtin.package:
    name: "{{ item.package }}"
    state: present
  loop: "{{ lsp_servers }}"
  when: "lsp_servers is defined and (lsp_servers | length > 0) and item.method == 'system'"
  become: true

- name: Add servers to plugins/lsp.lua
  ansible.builtin.blockinfile:
    path: "{{ plugins_dir }}/lsp.lua"
    insertafter: "-- LSP Servers"
    block: |2
        '{{ item.name }}',
    marker: "  -- {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
  loop: "{{ lsp_servers }}"

- name: Require lsp-config in init.lua
  ansible.builtin.lineinfile:
    path: "{{ nvim_dir }}/init.lua"
    search_string: "require('{{ item }}')"
    line: "require('{{ item }}')"
  loop:
    - "plugins.lsp"
    - "plugins.cmp"

- name: Ensure snippets are installed.
  when: install_snippets
  block:
    - name: Ensure snippets directory exists.
      ansible.builtin.file:
        path: "{{ snippets_dir }}"
        state: directory
        mode: "0755"

    - name: Clone snippet repos.
      ansible.builtin.git:
        repo: "{{ item }}"
        dest: "{{ snippets_dir }}"
        version: "main"
      loop: "{{ snippets_repos }}"
